"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/inventory/page",{

/***/ "(app-pages-browser)/./src/hooks/useLocalStorage.ts":
/*!**************************************!*\
  !*** ./src/hooks/useLocalStorage.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n/**\n * Custom hook for using localStorage with React state\n * @param key The localStorage key\n * @param initialValue The initial value if nothing is in localStorage\n * @returns [storedValue, setValue, { error, isLoading }]\n */ function useLocalStorage(key, initialValue) {\n    // State to store our value\n    const [storedValue, setStoredValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>{\n        if (false) {}\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n    // State for error handling and loading state\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    // Function to safely parse JSON with error handling\n    const safelyParseJSON = (json)=>{\n        if (!json) return null;\n        try {\n            return JSON.parse(json);\n        } catch (e) {\n            console.error(\"Error parsing JSON from localStorage:\", e);\n            setError(e instanceof Error ? e : new Error(String(e)));\n            return null;\n        }\n    };\n    // Initialize from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        try {\n            setIsLoading(true);\n            // Check if we're in a browser environment\n            if (false) {}\n            // Get from localStorage\n            const item = window.localStorage.getItem(key);\n            const parsedItem = safelyParseJSON(item);\n            // If item exists, use it, otherwise use initialValue\n            setStoredValue(parsedItem !== null ? parsedItem : initialValue);\n            // Create a storage event listener to sync state across tabs\n            const handleStorageChange = (e)=>{\n                if (e.key === key && e.newValue !== null) {\n                    const newValue = safelyParseJSON(e.newValue);\n                    if (newValue !== null) {\n                        setStoredValue(newValue);\n                    }\n                }\n            };\n            // Listen for changes in other tabs/windows\n            window.addEventListener(\"storage\", handleStorageChange);\n            setIsLoading(false);\n            // Clean up\n            return ()=>{\n                window.removeEventListener(\"storage\", handleStorageChange);\n            };\n        } catch (e) {\n            console.error(\"Error in useLocalStorage initialization:\", e);\n            setError(e instanceof Error ? e : new Error(String(e)));\n            setIsLoading(false);\n        }\n    }, [\n        key,\n        initialValue\n    ]);\n    // Return a wrapped version of useState's setter function that\n    // persists the new value to localStorage\n    const setValue = (value)=>{\n        try {\n            // Allow value to be a function so we have the same API as useState\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Check if we're in a browser environment\n            if (true) {\n                // Save to localStorage\n                const serializedValue = JSON.stringify(valueToStore);\n                window.localStorage.setItem(key, serializedValue);\n                // Dispatch a custom event so other tabs can listen for changes\n                window.dispatchEvent(new StorageEvent(\"storage\", {\n                    key,\n                    newValue: serializedValue\n                }));\n            }\n        } catch (e) {\n            console.error(\"Error setting localStorage value:\", e);\n            setError(e instanceof Error ? e : new Error(String(e)));\n        }\n    };\n    // Update stored value if the key changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (true) {\n            try {\n                const item = window.localStorage.getItem(key);\n                if (item) {\n                    setStoredValue(JSON.parse(item));\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }, [\n        key\n    ]);\n    return [\n        storedValue,\n        setValue,\n        {\n            error,\n            isLoading\n        }\n    ];\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (useLocalStorage);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useLocalStorage.ts\n"));

/***/ })

});